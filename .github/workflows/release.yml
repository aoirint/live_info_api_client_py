name: Publish a package to PyPI

on:
  release:
    types:
      - created

env:
  VERSION: ${{ github.event.release.tag_name != '' && github.event.release.tag_name || '0.0.0' }}

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - 
            os: ubuntu-20.04
            python_version: '3.8.14' # the latest version of 3.8.x
            sed: 'sed'
            tar: 'tar'
            artifact_name: liveinfo
            asset_name: liveinfo-linux-amd64.tgz
          - 
            os: windows-2019
            python_version: '3.8.10' # the latest version of 3.8.x
            sed: 'sed'
            tar: 'tar'
            artifact_name: liveinfo
            asset_name: liveinfo-windows-amd64.zip
          - 
            os: macos-11
            python_version: '3.8.14' # the latest version of 3.8.x
            sed: 'gsed'
            tar: 'gtar'
            artifact_name: liveinfo
            asset_name: liveinfo-macos-amd64.tgz

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install gsed, gtar for macOS
        if: startsWith(matrix.os, 'macos-')
        shell: bash
        run: brew install gnu-sed gnu-tar

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          check-latest: true
          cache: 'pip'
          cache-dependency-path: |
            **/requirements-development.txt

      - name: Install Dependencies
        run: |
            pip3 install -r requirements-development.txt
            pip3 install wheel

      - name: Replace version
        shell: bash
        run: |
          "${{ matrix.sed }}" -i "s/__VERSION__ = '0.0.0'/__VERSION__ = '${{ env.VERSION }}'/" liveinfo/__init__.py

      - name: Build Package
        run: python3 setup.py sdist bdist_wheel

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Upload Wheel to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          target_commitish: ${{ github.sha }}
          files: |-
            dist/*.whl

      - name: Build Binary
        run: pyinstaller --name liveinfo --onefile main.py

      - name: Create release asset (.tgz)
        if: endsWith(matrix.asset_name, '.tgz')
        shell: bash
        run: |
          ASSET_NAME="${{ matrix.asset_name }}"
          ASSET_NAME_STEM="${ASSET_NAME%.*}"

          cd dist
          mkdir "${ASSET_NAME_STEM}"
          mv "${{ matrix.artifact_name }}" "${ASSET_NAME_STEM}/"

          "${{ matrix.tar }}" czf "${{ matrix.asset_name }}" "${ASSET_NAME_STEM}/"

      - name: Create release asset (.zip)
        if: endsWith(matrix.asset_name, '.zip')
        shell: bash
        run: |
          ASSET_NAME="${{ matrix.asset_name }}"
          ASSET_NAME_STEM="${ASSET_NAME%.*}"

          cd dist
          mkdir "${ASSET_NAME_STEM}"
          mv "${{ matrix.artifact_name }}" "${ASSET_NAME_STEM}/"

          zip -r "${{ matrix.asset_name }}" "${ASSET_NAME_STEM}/"

      - name: Upload Binary to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          target_commitish: ${{ github.sha }}
          files: dist/${{ matrix.asset_name }}
